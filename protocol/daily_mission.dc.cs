// Generated by the DRCat compiler. DO NOT EDIT!

using System.Collections.Generic;
using System.IO;
using System;


namespace protocol
{

    public enum mission_data_key
    {
        QUICK_MATCH_COUNT = 1,
        GRANDPRIX_COUNT = 2,
    };	// enum mission_data_key

    // ================================================================================================

    public class daily_mission_info : Yippee.Net.IObjectBase
    {
        private int missionId_;
        private mission_data_key dataKey_;
        private short progress_;
        private short goal_;
        private bool receiveReward_;
        private reward_info reward_ = new reward_info();
        private static Yippee.Net.TypeInfo daily_mission_infoTypeInfo_ = new Yippee.Net.TypeInfo(0xE175C5F, "protocol.daily_mission_info");

        public daily_mission_info()
        {
        }
        public daily_mission_info(daily_mission_info from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_infoTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_info();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_info(this);
        }
        public void Clear()
        {
            // missionId
            missionId_ = 0;
            // dataKey
            dataKey_ = 0;
            // progress
            progress_ = 0;
            // goal
            goal_ = 0;
            // receiveReward
            receiveReward_ = false;
            // reward
            reward_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // missionId
            totalSize += Yippee.Net.Internal.Size(missionId_);
            // dataKey
            totalSize += sizeof(int);
            // progress
            totalSize += Yippee.Net.Internal.Size(progress_);
            // goal
            totalSize += Yippee.Net.Internal.Size(goal_);
            // receiveReward
            totalSize += Yippee.Net.Internal.Size(receiveReward_);
            // reward
            totalSize += Yippee.Net.Internal.Size(reward_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_info)from);
        }
        public void CopyFrom(daily_mission_info from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_info)from);
        }
        public void MergeFrom(daily_mission_info from)
        {
            if (from == this)
            {
                return;
            }

            // missionId
            SetMissionId(from.GetMissionId());
            // dataKey
            SetDataKey(from.GetDataKey());
            // progress
            SetProgress(from.GetProgress());
            // goal
            SetGoal(from.GetGoal());
            // receiveReward
            SetReceiveReward(from.GetReceiveReward());
            // reward
            SetReward(from.GetReward());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // missionId
            if (Yippee.Net.Internal.Serialize(output, missionId_) == false)
            {
                return false;
            }
            // dataKey
            {
                int value = (int)dataKey_;
                if (Yippee.Net.Internal.Serialize(output, value) == false)
                {
                    return false;
                }
            }
            // progress
            if (Yippee.Net.Internal.Serialize(output, progress_) == false)
            {
                return false;
            }
            // goal
            if (Yippee.Net.Internal.Serialize(output, goal_) == false)
            {
                return false;
            }
            // receiveReward
            if (Yippee.Net.Internal.Serialize(output, receiveReward_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // missionId
            if (Yippee.Net.Internal.Deserialize(input, out missionId_) == false)
            {
                return false;
            }
            // dataKey
            {
                int value = 0;
                if (Yippee.Net.Internal.Deserialize(input, out value) == false)
                {
                    return false;
                }
                dataKey_ = (mission_data_key)value;
            }
            // progress
            if (Yippee.Net.Internal.Deserialize(input, out progress_) == false)
            {
                return false;
            }
            // goal
            if (Yippee.Net.Internal.Deserialize(input, out goal_) == false)
            {
                return false;
            }
            // receiveReward
            if (Yippee.Net.Internal.Deserialize(input, out receiveReward_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public int GetMissionId()
        {
            return missionId_;
        }
        public void SetMissionId(int value)
        {
            missionId_ = value;
        }
        public mission_data_key GetDataKey()
        {
            return dataKey_;
        }
        public void SetDataKey(mission_data_key value)
        {
            dataKey_ = value;
        }
        public short GetProgress()
        {
            return progress_;
        }
        public void SetProgress(short value)
        {
            progress_ = value;
        }
        public short GetGoal()
        {
            return goal_;
        }
        public void SetGoal(short value)
        {
            goal_ = value;
        }
        public bool GetReceiveReward()
        {
            return receiveReward_;
        }
        public void SetReceiveReward(bool value)
        {
            receiveReward_ = value;
        }
        public reward_info GetReward()
        {
            return reward_;
        }
        public void SetReward(reward_info value)
        {
            reward_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_list : Yippee.Net.IObjectBase
    {
        private daily_mission_info[] infos_ = new daily_mission_info[0];
        private static Yippee.Net.TypeInfo daily_mission_listTypeInfo_ = new Yippee.Net.TypeInfo(0xE18A834, "protocol.daily_mission_list");

        public daily_mission_list()
        {
        }
        public daily_mission_list(daily_mission_list from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_listTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_list();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_list(this);
        }
        public void Clear()
        {
            // infos
            Array.Resize(ref infos_, 0);
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // infos
            totalSize += sizeof(uint);
            for (uint i = 0; i != infos_.Length; ++i)
            {
                totalSize += Yippee.Net.Internal.Size(infos_[i]);
            }

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_list)from);
        }
        public void CopyFrom(daily_mission_list from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_list)from);
        }
        public void MergeFrom(daily_mission_list from)
        {
            if (from == this)
            {
                return;
            }

            // infos
            int infosLength = infos_.Length;
            Array.Resize(ref infos_, infosLength + from.infos_.Length);
            Array.Copy(from.infos_, 0, infos_, infosLength, from.infos_.Length);
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // infos
            uint infosLength = (uint)infos_.Length;
            if (Yippee.Net.Internal.Serialize(output, infosLength) == false)
            {
                return false;
            }
            for (uint i = 0; i < infosLength; ++i)
            {
                if (infos_[i].Serialize(stream) == false)
                {
                    return false;
                }
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // infos
            uint infosLength = 0;
            if (Yippee.Net.Internal.Deserialize(input, out infosLength) == false)
            {
                return false;
            }
            Array.Resize(ref infos_, (int)infosLength);
            for (uint i = 0; i < infosLength; ++i)
            {
                daily_mission_info newInfos = new daily_mission_info();
                if (newInfos.Deserialize(stream) == false)
                {
                    return false;
                }
                infos_[i] = newInfos;
            }

            return true;
        }
        public daily_mission_info[] GetInfos()
        {
            return infos_;
        }
        public daily_mission_info GetInfos(int index)
        {
            return infos_[index];
        }
        public void SetInfos(daily_mission_info[] infos)
        {
            infos_ = infos;
        }
        public void AddInfos(daily_mission_info infos)
        {
            Array.Resize(ref infos_, infos_.Length + 1);
            infos_[infos_.Length - 1] = infos;
        }
        public void RemoveInfos(daily_mission_info infos)
        {
            int i = 0;
            for (; i < infos_.Length; ++i)
            {
                if (infos_[i] == infos)
                {
                    break;
                }
            }
            if (i == infos_.Length)
            {
                return;
            }
            for (; i < infos_.Length - 1; ++i)
            {
                infos_[i] = infos_[i+1];
            }
            Array.Resize(ref infos_, infos_.Length - 1);
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_list_req : Yippee.Net.IObjectBase
    {
        private static Yippee.Net.TypeInfo daily_mission_list_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x8387061, "protocol.daily_mission_list_req");

        public daily_mission_list_req()
        {
        }
        public daily_mission_list_req(daily_mission_list_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_list_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_list_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_list_req(this);
        }
        public void Clear()
        {
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_list_req)from);
        }
        public void CopyFrom(daily_mission_list_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_list_req)from);
        }
        public void MergeFrom(daily_mission_list_req from)
        {
            if (from == this)
            {
                return;
            }
        }
        public bool Serialize(Stream stream)
        {
            return true;
        }
        public bool Deserialize(Stream stream)
        {
            return true;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_list_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private daily_mission_list infos_ = new daily_mission_list();
        private static Yippee.Net.TypeInfo daily_mission_list_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x83850F3, "protocol.daily_mission_list_ans");

        public daily_mission_list_ans()
        {
        }
        public daily_mission_list_ans(daily_mission_list_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_list_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_list_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_list_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // infos
            infos_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // infos
            totalSize += Yippee.Net.Internal.Size(infos_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_list_ans)from);
        }
        public void CopyFrom(daily_mission_list_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_list_ans)from);
        }
        public void MergeFrom(daily_mission_list_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // infos
            SetInfos(from.GetInfos());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // infos
            if (infos_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // infos
            if (infos_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public daily_mission_list GetInfos()
        {
            return infos_;
        }
        public void SetInfos(daily_mission_list value)
        {
            infos_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_receive_reward_req : Yippee.Net.IObjectBase
    {
        private int missionId_;
        private static Yippee.Net.TypeInfo daily_mission_receive_reward_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x2DE201, "protocol.daily_mission_receive_reward_req");

        public daily_mission_receive_reward_req()
        {
        }
        public daily_mission_receive_reward_req(daily_mission_receive_reward_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_receive_reward_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_receive_reward_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_receive_reward_req(this);
        }
        public void Clear()
        {
            // missionId
            missionId_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // missionId
            totalSize += Yippee.Net.Internal.Size(missionId_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_receive_reward_req)from);
        }
        public void CopyFrom(daily_mission_receive_reward_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_receive_reward_req)from);
        }
        public void MergeFrom(daily_mission_receive_reward_req from)
        {
            if (from == this)
            {
                return;
            }

            // missionId
            SetMissionId(from.GetMissionId());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // missionId
            if (Yippee.Net.Internal.Serialize(output, missionId_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // missionId
            if (Yippee.Net.Internal.Deserialize(input, out missionId_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetMissionId()
        {
            return missionId_;
        }
        public void SetMissionId(int value)
        {
            missionId_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_receive_reward_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private reward_info reward_ = new reward_info();
        private static Yippee.Net.TypeInfo daily_mission_receive_reward_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x2DDE93, "protocol.daily_mission_receive_reward_ans");

        public daily_mission_receive_reward_ans()
        {
        }
        public daily_mission_receive_reward_ans(daily_mission_receive_reward_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_receive_reward_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_receive_reward_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_receive_reward_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // reward
            reward_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // reward
            totalSize += Yippee.Net.Internal.Size(reward_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_receive_reward_ans)from);
        }
        public void CopyFrom(daily_mission_receive_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_receive_reward_ans)from);
        }
        public void MergeFrom(daily_mission_receive_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // reward
            SetReward(from.GetReward());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public reward_info GetReward()
        {
            return reward_;
        }
        public void SetReward(reward_info value)
        {
            reward_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class daily_mission_accomplished_notify : Yippee.Net.IObjectBase
    {
        private int missionId_;
        private static Yippee.Net.TypeInfo daily_mission_accomplished_notifyTypeInfo_ = new Yippee.Net.TypeInfo(0xB6E8119, "protocol.daily_mission_accomplished_notify");

        public daily_mission_accomplished_notify()
        {
        }
        public daily_mission_accomplished_notify(daily_mission_accomplished_notify from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return daily_mission_accomplished_notifyTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new daily_mission_accomplished_notify();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new daily_mission_accomplished_notify(this);
        }
        public void Clear()
        {
            // missionId
            missionId_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // missionId
            totalSize += Yippee.Net.Internal.Size(missionId_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((daily_mission_accomplished_notify)from);
        }
        public void CopyFrom(daily_mission_accomplished_notify from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((daily_mission_accomplished_notify)from);
        }
        public void MergeFrom(daily_mission_accomplished_notify from)
        {
            if (from == this)
            {
                return;
            }

            // missionId
            SetMissionId(from.GetMissionId());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // missionId
            if (Yippee.Net.Internal.Serialize(output, missionId_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // missionId
            if (Yippee.Net.Internal.Deserialize(input, out missionId_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetMissionId()
        {
            return missionId_;
        }
        public void SetMissionId(int value)
        {
            missionId_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------


}	// namespace protocol