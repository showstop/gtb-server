// Generated by the SpringCat.Wave compiler. DO NOT EDIT!

#ifndef __SPRINGCAT_WAVE_INTERNAL_LOG_DC_H_INCLUDE__
#define __SPRINGCAT_WAVE_INTERNAL_LOG_DC_H_INCLUDE__

#include <SpringCat/SpringCat.h>


namespace protocol
{

class service_log;

// ================================================================================================

class service_log : public SpringCat::Wave::object_base
{
private:
    SpringCat::Wave::internal::bitset<1> __has_bits__;

private:
    std::string log_msg_;

public:
    service_log(void);
    service_log(const service_log& from);
    virtual ~service_log(void);

    inline service_log& operator=(const service_log& rhs)
    {
        copy_from(rhs);
        return *this;
    }

    static const SpringCat::Wave::type_info& static_type_info(void);
    virtual const SpringCat::Wave::type_info& runtime_type_info(void) const;

    virtual service_log* new_instance(void) const;
    virtual service_log* clone(void) const;

    virtual void clear(void);

    virtual bool initialized(void) const;
    virtual SpringCat::uint32_t size(void) const;

    virtual void copy_from(const SpringCat::Wave::object_base& from);
    virtual void merge_from(const SpringCat::Wave::object_base& from);
    void copy_from(const service_log& from);
    void merge_from(const service_log& from);

    virtual bool serialize(SpringCat::System::Stream& output) const;
    virtual bool serialize(std::ostream& output) const;
    virtual bool serialize(std::string& output) const;

    virtual bool deserialize(SpringCat::System::Stream& input);
    virtual bool deserialize(std::ostream& input);
    virtual bool deserialize(std::string& input);

    // log_msg
    const std::string& get_log_msg(void) const;
    std::string* get_mutable_log_msg(void);
    void set_log_msg(const std::string& value);
    void set_log_msg(const char* value);
};
// ------------------------------------------------------------------------------------------------



}    // namespace protocol

#endif    // __SPRINGCAT_WAVE_INTERNAL_LOG_DC_INCLUDE__
