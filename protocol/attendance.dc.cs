// Generated by the DRCat compiler. DO NOT EDIT!

using System.Collections.Generic;
using System.IO;
using System;


namespace protocol
{

    // ================================================================================================

    public class attendance_info : Yippee.Net.IObjectBase
    {
        private int daySeq_;
        private reward_info reward_ = new reward_info();
        private bool receiveReward_;
        private bool complete_;
        private static Yippee.Net.TypeInfo attendance_infoTypeInfo_ = new Yippee.Net.TypeInfo(0xC19816F, "protocol.attendance_info");

        public attendance_info()
        {
        }
        public attendance_info(attendance_info from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_infoTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_info();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_info(this);
        }
        public void Clear()
        {
            // daySeq
            daySeq_ = 0;
            // reward
            reward_.Clear();
            // receiveReward
            receiveReward_ = false;
            // complete
            complete_ = false;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // daySeq
            totalSize += Yippee.Net.Internal.Size(daySeq_);
            // reward
            totalSize += Yippee.Net.Internal.Size(reward_);
            // receiveReward
            totalSize += Yippee.Net.Internal.Size(receiveReward_);
            // complete
            totalSize += Yippee.Net.Internal.Size(complete_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_info)from);
        }
        public void CopyFrom(attendance_info from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_info)from);
        }
        public void MergeFrom(attendance_info from)
        {
            if (from == this)
            {
                return;
            }

            // daySeq
            SetDaySeq(from.GetDaySeq());
            // reward
            SetReward(from.GetReward());
            // receiveReward
            SetReceiveReward(from.GetReceiveReward());
            // complete
            SetComplete(from.GetComplete());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // daySeq
            if (Yippee.Net.Internal.Serialize(output, daySeq_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Serialize(stream) == false)
            {
                return false;
            }
            // receiveReward
            if (Yippee.Net.Internal.Serialize(output, receiveReward_) == false)
            {
                return false;
            }
            // complete
            if (Yippee.Net.Internal.Serialize(output, complete_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // daySeq
            if (Yippee.Net.Internal.Deserialize(input, out daySeq_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Deserialize(stream) == false)
            {
                return false;
            }
            // receiveReward
            if (Yippee.Net.Internal.Deserialize(input, out receiveReward_) == false)
            {
                return false;
            }
            // complete
            if (Yippee.Net.Internal.Deserialize(input, out complete_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetDaySeq()
        {
            return daySeq_;
        }
        public void SetDaySeq(int value)
        {
            daySeq_ = value;
        }
        public reward_info GetReward()
        {
            return reward_;
        }
        public void SetReward(reward_info value)
        {
            reward_ = value;
        }
        public bool GetReceiveReward()
        {
            return receiveReward_;
        }
        public void SetReceiveReward(bool value)
        {
            receiveReward_ = value;
        }
        public bool GetComplete()
        {
            return complete_;
        }
        public void SetComplete(bool value)
        {
            complete_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_list : Yippee.Net.IObjectBase
    {
        private attendance_info[] infos_ = new attendance_info[0];
        private static Yippee.Net.TypeInfo attendance_listTypeInfo_ = new Yippee.Net.TypeInfo(0xC1AB504, "protocol.attendance_list");

        public attendance_list()
        {
        }
        public attendance_list(attendance_list from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_listTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_list();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_list(this);
        }
        public void Clear()
        {
            // infos
            Array.Resize(ref infos_, 0);
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // infos
            totalSize += sizeof(uint);
            for (uint i = 0; i != infos_.Length; ++i)
            {
                totalSize += Yippee.Net.Internal.Size(infos_[i]);
            }

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_list)from);
        }
        public void CopyFrom(attendance_list from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_list)from);
        }
        public void MergeFrom(attendance_list from)
        {
            if (from == this)
            {
                return;
            }

            // infos
            int infosLength = infos_.Length;
            Array.Resize(ref infos_, infosLength + from.infos_.Length);
            Array.Copy(from.infos_, 0, infos_, infosLength, from.infos_.Length);
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // infos
            uint infosLength = (uint)infos_.Length;
            if (Yippee.Net.Internal.Serialize(output, infosLength) == false)
            {
                return false;
            }
            for (uint i = 0; i < infosLength; ++i)
            {
                if (infos_[i].Serialize(stream) == false)
                {
                    return false;
                }
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // infos
            uint infosLength = 0;
            if (Yippee.Net.Internal.Deserialize(input, out infosLength) == false)
            {
                return false;
            }
            Array.Resize(ref infos_, (int)infosLength);
            for (uint i = 0; i < infosLength; ++i)
            {
                attendance_info newInfos = new attendance_info();
                if (newInfos.Deserialize(stream) == false)
                {
                    return false;
                }
                infos_[i] = newInfos;
            }

            return true;
        }
        public attendance_info[] GetInfos()
        {
            return infos_;
        }
        public attendance_info GetInfos(int index)
        {
            return infos_[index];
        }
        public void SetInfos(attendance_info[] infos)
        {
            infos_ = infos;
        }
        public void AddInfos(attendance_info infos)
        {
            Array.Resize(ref infos_, infos_.Length + 1);
            infos_[infos_.Length - 1] = infos;
        }
        public void RemoveInfos(attendance_info infos)
        {
            int i = 0;
            for (; i < infos_.Length; ++i)
            {
                if (infos_[i] == infos)
                {
                    break;
                }
            }
            if (i == infos_.Length)
            {
                return;
            }
            for (; i < infos_.Length - 1; ++i)
            {
                infos_[i] = infos_[i+1];
            }
            Array.Resize(ref infos_, infos_.Length - 1);
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_list_req : Yippee.Net.IObjectBase
    {
        private static Yippee.Net.TypeInfo attendance_list_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x5067271, "protocol.attendance_list_req");

        public attendance_list_req()
        {
        }
        public attendance_list_req(attendance_list_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_list_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_list_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_list_req(this);
        }
        public void Clear()
        {
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_list_req)from);
        }
        public void CopyFrom(attendance_list_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_list_req)from);
        }
        public void MergeFrom(attendance_list_req from)
        {
            if (from == this)
            {
                return;
            }
        }
        public bool Serialize(Stream stream)
        {
            return true;
        }
        public bool Deserialize(Stream stream)
        {
            return true;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_list_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private attendance_list infos_ = new attendance_list();
        private static Yippee.Net.TypeInfo attendance_list_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x5064EE3, "protocol.attendance_list_ans");

        public attendance_list_ans()
        {
        }
        public attendance_list_ans(attendance_list_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_list_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_list_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_list_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // infos
            infos_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // infos
            totalSize += Yippee.Net.Internal.Size(infos_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_list_ans)from);
        }
        public void CopyFrom(attendance_list_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_list_ans)from);
        }
        public void MergeFrom(attendance_list_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // infos
            SetInfos(from.GetInfos());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // infos
            if (infos_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // infos
            if (infos_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public attendance_list GetInfos()
        {
            return infos_;
        }
        public void SetInfos(attendance_list value)
        {
            infos_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_receive_reward_req : Yippee.Net.IObjectBase
    {
        private int daySeq_;
        private static Yippee.Net.TypeInfo attendance_receive_reward_reqTypeInfo_ = new Yippee.Net.TypeInfo(0xE32DC01, "protocol.attendance_receive_reward_req");

        public attendance_receive_reward_req()
        {
        }
        public attendance_receive_reward_req(attendance_receive_reward_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_receive_reward_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_receive_reward_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_receive_reward_req(this);
        }
        public void Clear()
        {
            // daySeq
            daySeq_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // daySeq
            totalSize += Yippee.Net.Internal.Size(daySeq_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_receive_reward_req)from);
        }
        public void CopyFrom(attendance_receive_reward_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_receive_reward_req)from);
        }
        public void MergeFrom(attendance_receive_reward_req from)
        {
            if (from == this)
            {
                return;
            }

            // daySeq
            SetDaySeq(from.GetDaySeq());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // daySeq
            if (Yippee.Net.Internal.Serialize(output, daySeq_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // daySeq
            if (Yippee.Net.Internal.Deserialize(input, out daySeq_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetDaySeq()
        {
            return daySeq_;
        }
        public void SetDaySeq(int value)
        {
            daySeq_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_receive_reward_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private reward_info reward_ = new reward_info();
        private static Yippee.Net.TypeInfo attendance_receive_reward_ansTypeInfo_ = new Yippee.Net.TypeInfo(0xE32E493, "protocol.attendance_receive_reward_ans");

        public attendance_receive_reward_ans()
        {
        }
        public attendance_receive_reward_ans(attendance_receive_reward_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_receive_reward_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_receive_reward_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_receive_reward_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // reward
            reward_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // reward
            totalSize += Yippee.Net.Internal.Size(reward_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_receive_reward_ans)from);
        }
        public void CopyFrom(attendance_receive_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_receive_reward_ans)from);
        }
        public void MergeFrom(attendance_receive_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // reward
            SetReward(from.GetReward());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // reward
            if (reward_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public reward_info GetReward()
        {
            return reward_;
        }
        public void SetReward(reward_info value)
        {
            reward_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_monthly_reward_req : Yippee.Net.IObjectBase
    {
        private static Yippee.Net.TypeInfo attendance_monthly_reward_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x1BF1311, "protocol.attendance_monthly_reward_req");

        public attendance_monthly_reward_req()
        {
        }
        public attendance_monthly_reward_req(attendance_monthly_reward_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_monthly_reward_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_monthly_reward_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_monthly_reward_req(this);
        }
        public void Clear()
        {
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_monthly_reward_req)from);
        }
        public void CopyFrom(attendance_monthly_reward_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_monthly_reward_req)from);
        }
        public void MergeFrom(attendance_monthly_reward_req from)
        {
            if (from == this)
            {
                return;
            }
        }
        public bool Serialize(Stream stream)
        {
            return true;
        }
        public bool Deserialize(Stream stream)
        {
            return true;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class attendance_monthly_reward_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private reward_info[] rewards_ = new reward_info[0];
        private static Yippee.Net.TypeInfo attendance_monthly_reward_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x1BF2D83, "protocol.attendance_monthly_reward_ans");

        public attendance_monthly_reward_ans()
        {
        }
        public attendance_monthly_reward_ans(attendance_monthly_reward_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return attendance_monthly_reward_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new attendance_monthly_reward_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new attendance_monthly_reward_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // rewards
            Array.Resize(ref rewards_, 0);
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // rewards
            totalSize += sizeof(uint);
            for (uint i = 0; i != rewards_.Length; ++i)
            {
                totalSize += Yippee.Net.Internal.Size(rewards_[i]);
            }

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((attendance_monthly_reward_ans)from);
        }
        public void CopyFrom(attendance_monthly_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((attendance_monthly_reward_ans)from);
        }
        public void MergeFrom(attendance_monthly_reward_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // rewards
            int rewardsLength = rewards_.Length;
            Array.Resize(ref rewards_, rewardsLength + from.rewards_.Length);
            Array.Copy(from.rewards_, 0, rewards_, rewardsLength, from.rewards_.Length);
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // rewards
            uint rewardsLength = (uint)rewards_.Length;
            if (Yippee.Net.Internal.Serialize(output, rewardsLength) == false)
            {
                return false;
            }
            for (uint i = 0; i < rewardsLength; ++i)
            {
                if (rewards_[i].Serialize(stream) == false)
                {
                    return false;
                }
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // rewards
            uint rewardsLength = 0;
            if (Yippee.Net.Internal.Deserialize(input, out rewardsLength) == false)
            {
                return false;
            }
            Array.Resize(ref rewards_, (int)rewardsLength);
            for (uint i = 0; i < rewardsLength; ++i)
            {
                reward_info newRewards = new reward_info();
                if (newRewards.Deserialize(stream) == false)
                {
                    return false;
                }
                rewards_[i] = newRewards;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public reward_info[] GetRewards()
        {
            return rewards_;
        }
        public reward_info GetRewards(int index)
        {
            return rewards_[index];
        }
        public void SetRewards(reward_info[] rewards)
        {
            rewards_ = rewards;
        }
        public void AddRewards(reward_info rewards)
        {
            Array.Resize(ref rewards_, rewards_.Length + 1);
            rewards_[rewards_.Length - 1] = rewards;
        }
        public void RemoveRewards(reward_info rewards)
        {
            int i = 0;
            for (; i < rewards_.Length; ++i)
            {
                if (rewards_[i] == rewards)
                {
                    break;
                }
            }
            if (i == rewards_.Length)
            {
                return;
            }
            for (; i < rewards_.Length - 1; ++i)
            {
                rewards_[i] = rewards_[i+1];
            }
            Array.Resize(ref rewards_, rewards_.Length - 1);
        }
    }
    // ------------------------------------------------------------------------------------------------


}	// namespace protocol