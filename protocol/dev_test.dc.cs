// Generated by the DRCat compiler. DO NOT EDIT!

using System.Collections.Generic;
using System.IO;
using System;


namespace dev
{

    // ================================================================================================

    public class put_vehicle_card_req : Yippee.Net.IObjectBase
    {
        private int vehicleNo_;
        private int quantity_;
        private static Yippee.Net.TypeInfo put_vehicle_card_reqTypeInfo_ = new Yippee.Net.TypeInfo(0xD6163C1, "dev.put_vehicle_card_req");

        public put_vehicle_card_req()
        {
        }
        public put_vehicle_card_req(put_vehicle_card_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return put_vehicle_card_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new put_vehicle_card_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new put_vehicle_card_req(this);
        }
        public void Clear()
        {
            // vehicleNo
            vehicleNo_ = 0;
            // quantity
            quantity_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // vehicleNo
            totalSize += Yippee.Net.Internal.Size(vehicleNo_);
            // quantity
            totalSize += Yippee.Net.Internal.Size(quantity_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((put_vehicle_card_req)from);
        }
        public void CopyFrom(put_vehicle_card_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((put_vehicle_card_req)from);
        }
        public void MergeFrom(put_vehicle_card_req from)
        {
            if (from == this)
            {
                return;
            }

            // vehicleNo
            SetVehicleNo(from.GetVehicleNo());
            // quantity
            SetQuantity(from.GetQuantity());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // vehicleNo
            if (Yippee.Net.Internal.Serialize(output, vehicleNo_) == false)
            {
                return false;
            }
            // quantity
            if (Yippee.Net.Internal.Serialize(output, quantity_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // vehicleNo
            if (Yippee.Net.Internal.Deserialize(input, out vehicleNo_) == false)
            {
                return false;
            }
            // quantity
            if (Yippee.Net.Internal.Deserialize(input, out quantity_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetVehicleNo()
        {
            return vehicleNo_;
        }
        public void SetVehicleNo(int value)
        {
            vehicleNo_ = value;
        }
        public int GetQuantity()
        {
            return quantity_;
        }
        public void SetQuantity(int value)
        {
            quantity_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class put_vehicle_card_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private protocol.vehicle updatedVehicle_ = new protocol.vehicle();
        private static Yippee.Net.TypeInfo put_vehicle_card_ansTypeInfo_ = new Yippee.Net.TypeInfo(0xD615D53, "dev.put_vehicle_card_ans");

        public put_vehicle_card_ans()
        {
        }
        public put_vehicle_card_ans(put_vehicle_card_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return put_vehicle_card_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new put_vehicle_card_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new put_vehicle_card_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // updatedVehicle
            updatedVehicle_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // updatedVehicle
            totalSize += Yippee.Net.Internal.Size(updatedVehicle_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((put_vehicle_card_ans)from);
        }
        public void CopyFrom(put_vehicle_card_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((put_vehicle_card_ans)from);
        }
        public void MergeFrom(put_vehicle_card_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // updatedVehicle
            SetUpdatedVehicle(from.GetUpdatedVehicle());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // updatedVehicle
            if (updatedVehicle_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // updatedVehicle
            if (updatedVehicle_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public protocol.vehicle GetUpdatedVehicle()
        {
            return updatedVehicle_;
        }
        public void SetUpdatedVehicle(protocol.vehicle value)
        {
            updatedVehicle_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class put_vehicle_stuff_req : Yippee.Net.IObjectBase
    {
        private int stuffId_;
        private int quantity_;
        private static Yippee.Net.TypeInfo put_vehicle_stuff_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x55CEB21, "dev.put_vehicle_stuff_req");

        public put_vehicle_stuff_req()
        {
        }
        public put_vehicle_stuff_req(put_vehicle_stuff_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return put_vehicle_stuff_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new put_vehicle_stuff_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new put_vehicle_stuff_req(this);
        }
        public void Clear()
        {
            // stuffId
            stuffId_ = 0;
            // quantity
            quantity_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // stuffId
            totalSize += Yippee.Net.Internal.Size(stuffId_);
            // quantity
            totalSize += Yippee.Net.Internal.Size(quantity_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((put_vehicle_stuff_req)from);
        }
        public void CopyFrom(put_vehicle_stuff_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((put_vehicle_stuff_req)from);
        }
        public void MergeFrom(put_vehicle_stuff_req from)
        {
            if (from == this)
            {
                return;
            }

            // stuffId
            SetStuffId(from.GetStuffId());
            // quantity
            SetQuantity(from.GetQuantity());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // stuffId
            if (Yippee.Net.Internal.Serialize(output, stuffId_) == false)
            {
                return false;
            }
            // quantity
            if (Yippee.Net.Internal.Serialize(output, quantity_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // stuffId
            if (Yippee.Net.Internal.Deserialize(input, out stuffId_) == false)
            {
                return false;
            }
            // quantity
            if (Yippee.Net.Internal.Deserialize(input, out quantity_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetStuffId()
        {
            return stuffId_;
        }
        public void SetStuffId(int value)
        {
            stuffId_ = value;
        }
        public int GetQuantity()
        {
            return quantity_;
        }
        public void SetQuantity(int value)
        {
            quantity_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class put_vehicle_stuff_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private protocol.vehicle_stuff updatedStuffs_ = new protocol.vehicle_stuff();
        private static Yippee.Net.TypeInfo put_vehicle_stuff_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x55CD5B3, "dev.put_vehicle_stuff_ans");

        public put_vehicle_stuff_ans()
        {
        }
        public put_vehicle_stuff_ans(put_vehicle_stuff_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return put_vehicle_stuff_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new put_vehicle_stuff_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new put_vehicle_stuff_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // updatedStuffs
            updatedStuffs_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // updatedStuffs
            totalSize += Yippee.Net.Internal.Size(updatedStuffs_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((put_vehicle_stuff_ans)from);
        }
        public void CopyFrom(put_vehicle_stuff_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((put_vehicle_stuff_ans)from);
        }
        public void MergeFrom(put_vehicle_stuff_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // updatedStuffs
            SetUpdatedStuffs(from.GetUpdatedStuffs());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // updatedStuffs
            if (updatedStuffs_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // updatedStuffs
            if (updatedStuffs_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public protocol.vehicle_stuff GetUpdatedStuffs()
        {
            return updatedStuffs_;
        }
        public void SetUpdatedStuffs(protocol.vehicle_stuff value)
        {
            updatedStuffs_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------


}	// namespace dev