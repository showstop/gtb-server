// Generated by the DRCat compiler. DO NOT EDIT!

using System.Collections.Generic;
using System.IO;
using System;


namespace protocol
{

    public enum PlayerState
    {
        OFFLINE = 0,
        IN_LOBBY = 1,
        IN_SEARCHING = 2,
        IN_PLAYING = 3,
    };	// enum PlayerState

    // ================================================================================================

    public class player_profile_info : Yippee.Net.IObjectBase
    {
        private ulong playerNo_;
        private String gameNick_ = "";
        private short nationCode_;
        private ushort playerLevel_;
        private int exp_;
        private short expGauge_;
        private int trophy_;
        private String options_ = "";
        private static Yippee.Net.TypeInfo player_profile_infoTypeInfo_ = new Yippee.Net.TypeInfo(0xAC58C7F, "protocol.player_profile_info");

        public player_profile_info()
        {
        }
        public player_profile_info(player_profile_info from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return player_profile_infoTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new player_profile_info();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new player_profile_info(this);
        }
        public void Clear()
        {
            // playerNo
            playerNo_ = 0;
            // gameNick
            gameNick_ = "";
            // nationCode
            nationCode_ = 0;
            // playerLevel
            playerLevel_ = 0;
            // exp
            exp_ = 0;
            // expGauge
            expGauge_ = 0;
            // trophy
            trophy_ = 0;
            // options
            options_ = "";
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // playerNo
            totalSize += Yippee.Net.Internal.Size(playerNo_);
            // gameNick
            totalSize += Yippee.Net.Internal.SizeUTF8String(gameNick_);
            // nationCode
            totalSize += Yippee.Net.Internal.Size(nationCode_);
            // playerLevel
            totalSize += Yippee.Net.Internal.Size(playerLevel_);
            // exp
            totalSize += Yippee.Net.Internal.Size(exp_);
            // expGauge
            totalSize += Yippee.Net.Internal.Size(expGauge_);
            // trophy
            totalSize += Yippee.Net.Internal.Size(trophy_);
            // options
            totalSize += Yippee.Net.Internal.SizeUTF8String(options_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((player_profile_info)from);
        }
        public void CopyFrom(player_profile_info from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((player_profile_info)from);
        }
        public void MergeFrom(player_profile_info from)
        {
            if (from == this)
            {
                return;
            }

            // playerNo
            SetPlayerNo(from.GetPlayerNo());
            // gameNick
            SetGameNick(from.GetGameNick());
            // nationCode
            SetNationCode(from.GetNationCode());
            // playerLevel
            SetPlayerLevel(from.GetPlayerLevel());
            // exp
            SetExp(from.GetExp());
            // expGauge
            SetExpGauge(from.GetExpGauge());
            // trophy
            SetTrophy(from.GetTrophy());
            // options
            SetOptions(from.GetOptions());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // playerNo
            if (Yippee.Net.Internal.Serialize(output, playerNo_) == false)
            {
                return false;
            }
            // gameNick
            if (Yippee.Net.Internal.SerializeUTF8String(output, gameNick_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Serialize(output, nationCode_) == false)
            {
                return false;
            }
            // playerLevel
            if (Yippee.Net.Internal.Serialize(output, playerLevel_) == false)
            {
                return false;
            }
            // exp
            if (Yippee.Net.Internal.Serialize(output, exp_) == false)
            {
                return false;
            }
            // expGauge
            if (Yippee.Net.Internal.Serialize(output, expGauge_) == false)
            {
                return false;
            }
            // trophy
            if (Yippee.Net.Internal.Serialize(output, trophy_) == false)
            {
                return false;
            }
            // options
            if (Yippee.Net.Internal.SerializeUTF8String(output, options_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // playerNo
            if (Yippee.Net.Internal.Deserialize(input, out playerNo_) == false)
            {
                return false;
            }
            // gameNick
            if (Yippee.Net.Internal.DeserializeUTF8String(input, out gameNick_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Deserialize(input, out nationCode_) == false)
            {
                return false;
            }
            // playerLevel
            if (Yippee.Net.Internal.Deserialize(input, out playerLevel_) == false)
            {
                return false;
            }
            // exp
            if (Yippee.Net.Internal.Deserialize(input, out exp_) == false)
            {
                return false;
            }
            // expGauge
            if (Yippee.Net.Internal.Deserialize(input, out expGauge_) == false)
            {
                return false;
            }
            // trophy
            if (Yippee.Net.Internal.Deserialize(input, out trophy_) == false)
            {
                return false;
            }
            // options
            if (Yippee.Net.Internal.DeserializeUTF8String(input, out options_) == false)
            {
                return false;
            }

            return true;
        }
        public ulong GetPlayerNo()
        {
            return playerNo_;
        }
        public void SetPlayerNo(ulong value)
        {
            playerNo_ = value;
        }
        public String GetGameNick()
        {
            return gameNick_;
        }
        public void SetGameNick(String value)
        {
            gameNick_ = value;
        }
        public short GetNationCode()
        {
            return nationCode_;
        }
        public void SetNationCode(short value)
        {
            nationCode_ = value;
        }
        public ushort GetPlayerLevel()
        {
            return playerLevel_;
        }
        public void SetPlayerLevel(ushort value)
        {
            playerLevel_ = value;
        }
        public int GetExp()
        {
            return exp_;
        }
        public void SetExp(int value)
        {
            exp_ = value;
        }
        public short GetExpGauge()
        {
            return expGauge_;
        }
        public void SetExpGauge(short value)
        {
            expGauge_ = value;
        }
        public int GetTrophy()
        {
            return trophy_;
        }
        public void SetTrophy(int value)
        {
            trophy_ = value;
        }
        public String GetOptions()
        {
            return options_;
        }
        public void SetOptions(String value)
        {
            options_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class player_record_info : Yippee.Net.IObjectBase
    {
        private static Yippee.Net.TypeInfo player_record_infoTypeInfo_ = new Yippee.Net.TypeInfo(0xD2A41EF, "protocol.player_record_info");

        public player_record_info()
        {
        }
        public player_record_info(player_record_info from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return player_record_infoTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new player_record_info();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new player_record_info(this);
        }
        public void Clear()
        {
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((player_record_info)from);
        }
        public void CopyFrom(player_record_info from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((player_record_info)from);
        }
        public void MergeFrom(player_record_info from)
        {
            if (from == this)
            {
                return;
            }
        }
        public bool Serialize(Stream stream)
        {
            return true;
        }
        public bool Deserialize(Stream stream)
        {
            return true;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class player_profile_info_req : Yippee.Net.IObjectBase
    {
        private ulong playerNo_;
        private static Yippee.Net.TypeInfo player_profile_info_reqTypeInfo_ = new Yippee.Net.TypeInfo(0xC8FAD41, "protocol.player_profile_info_req");

        public player_profile_info_req()
        {
        }
        public player_profile_info_req(player_profile_info_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return player_profile_info_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new player_profile_info_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new player_profile_info_req(this);
        }
        public void Clear()
        {
            // playerNo
            playerNo_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // playerNo
            totalSize += Yippee.Net.Internal.Size(playerNo_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((player_profile_info_req)from);
        }
        public void CopyFrom(player_profile_info_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((player_profile_info_req)from);
        }
        public void MergeFrom(player_profile_info_req from)
        {
            if (from == this)
            {
                return;
            }

            // playerNo
            SetPlayerNo(from.GetPlayerNo());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // playerNo
            if (Yippee.Net.Internal.Serialize(output, playerNo_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // playerNo
            if (Yippee.Net.Internal.Deserialize(input, out playerNo_) == false)
            {
                return false;
            }

            return true;
        }
        public ulong GetPlayerNo()
        {
            return playerNo_;
        }
        public void SetPlayerNo(ulong value)
        {
            playerNo_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class player_profile_info_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private player_profile_info info_ = new player_profile_info();
        private static Yippee.Net.TypeInfo player_profile_info_ansTypeInfo_ = new Yippee.Net.TypeInfo(0xC8F93D3, "protocol.player_profile_info_ans");

        public player_profile_info_ans()
        {
        }
        public player_profile_info_ans(player_profile_info_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return player_profile_info_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new player_profile_info_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new player_profile_info_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // info
            info_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // info
            totalSize += Yippee.Net.Internal.Size(info_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((player_profile_info_ans)from);
        }
        public void CopyFrom(player_profile_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((player_profile_info_ans)from);
        }
        public void MergeFrom(player_profile_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // info
            SetInfo(from.GetInfo());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // info
            if (info_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // info
            if (info_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public player_profile_info GetInfo()
        {
            return info_;
        }
        public void SetInfo(player_profile_info value)
        {
            info_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class update_player_profile_info_req : Yippee.Net.IObjectBase
    {
        private String gameNick_ = "";
        private short nationCode_;
        private static Yippee.Net.TypeInfo update_player_profile_info_reqTypeInfo_ = new Yippee.Net.TypeInfo(0xE67D641, "protocol.update_player_profile_info_req");

        public update_player_profile_info_req()
        {
        }
        public update_player_profile_info_req(update_player_profile_info_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return update_player_profile_info_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new update_player_profile_info_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new update_player_profile_info_req(this);
        }
        public void Clear()
        {
            // gameNick
            gameNick_ = "";
            // nationCode
            nationCode_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // gameNick
            totalSize += Yippee.Net.Internal.SizeUTF8String(gameNick_);
            // nationCode
            totalSize += Yippee.Net.Internal.Size(nationCode_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((update_player_profile_info_req)from);
        }
        public void CopyFrom(update_player_profile_info_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((update_player_profile_info_req)from);
        }
        public void MergeFrom(update_player_profile_info_req from)
        {
            if (from == this)
            {
                return;
            }

            // gameNick
            SetGameNick(from.GetGameNick());
            // nationCode
            SetNationCode(from.GetNationCode());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // gameNick
            if (Yippee.Net.Internal.SerializeUTF8String(output, gameNick_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Serialize(output, nationCode_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // gameNick
            if (Yippee.Net.Internal.DeserializeUTF8String(input, out gameNick_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Deserialize(input, out nationCode_) == false)
            {
                return false;
            }

            return true;
        }
        public String GetGameNick()
        {
            return gameNick_;
        }
        public void SetGameNick(String value)
        {
            gameNick_ = value;
        }
        public short GetNationCode()
        {
            return nationCode_;
        }
        public void SetNationCode(short value)
        {
            nationCode_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class update_player_profile_info_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private player_profile_info info_ = new player_profile_info();
        private static Yippee.Net.TypeInfo update_player_profile_info_ansTypeInfo_ = new Yippee.Net.TypeInfo(0xE67EAD3, "protocol.update_player_profile_info_ans");

        public update_player_profile_info_ans()
        {
        }
        public update_player_profile_info_ans(update_player_profile_info_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return update_player_profile_info_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new update_player_profile_info_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new update_player_profile_info_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // info
            info_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // info
            totalSize += Yippee.Net.Internal.Size(info_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((update_player_profile_info_ans)from);
        }
        public void CopyFrom(update_player_profile_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((update_player_profile_info_ans)from);
        }
        public void MergeFrom(update_player_profile_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // info
            SetInfo(from.GetInfo());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // info
            if (info_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // info
            if (info_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public player_profile_info GetInfo()
        {
            return info_;
        }
        public void SetInfo(player_profile_info value)
        {
            info_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------


}	// namespace protocol