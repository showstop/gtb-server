// Generated by the DRCat compiler. DO NOT EDIT!

using System.Collections.Generic;
using System.IO;
using System;


namespace protocol
{

    public enum grandprix_rank_type
    {
        LEAGUE = 1,
        GLOBAL = 2,
    };	// enum grandprix_rank_type

    public enum grandprix_league
    {
        ROOKIE = 1,
        VETERAN = 2,
        MASTER = 3,
    };	// enum grandprix_league

    // ================================================================================================

    public class grandprix_info : Yippee.Net.IObjectBase
    {
        private int gpPoint_;
        private short repeatCount_;
        private long rewardDate_;
        private reward_info repeatReward_ = new reward_info();
        private grandprix_league league_;
        private ulong myRank_;
        private int myRankPercentile_;
        private static Yippee.Net.TypeInfo grandprix_infoTypeInfo_ = new Yippee.Net.TypeInfo(0xD53D12F, "protocol.grandprix_info");

        public grandprix_info()
        {
        }
        public grandprix_info(grandprix_info from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_infoTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_info();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_info(this);
        }
        public void Clear()
        {
            // gpPoint
            gpPoint_ = 0;
            // repeatCount
            repeatCount_ = 0;
            // rewardDate
            rewardDate_ = 0;
            // repeatReward
            repeatReward_.Clear();
            // league
            league_ = 0;
            // myRank
            myRank_ = 0;
            // myRankPercentile
            myRankPercentile_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // gpPoint
            totalSize += Yippee.Net.Internal.Size(gpPoint_);
            // repeatCount
            totalSize += Yippee.Net.Internal.Size(repeatCount_);
            // rewardDate
            totalSize += Yippee.Net.Internal.Size(rewardDate_);
            // repeatReward
            totalSize += Yippee.Net.Internal.Size(repeatReward_);
            // league
            totalSize += sizeof(int);
            // myRank
            totalSize += Yippee.Net.Internal.Size(myRank_);
            // myRankPercentile
            totalSize += Yippee.Net.Internal.Size(myRankPercentile_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_info)from);
        }
        public void CopyFrom(grandprix_info from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_info)from);
        }
        public void MergeFrom(grandprix_info from)
        {
            if (from == this)
            {
                return;
            }

            // gpPoint
            SetGpPoint(from.GetGpPoint());
            // repeatCount
            SetRepeatCount(from.GetRepeatCount());
            // rewardDate
            SetRewardDate(from.GetRewardDate());
            // repeatReward
            SetRepeatReward(from.GetRepeatReward());
            // league
            SetLeague(from.GetLeague());
            // myRank
            SetMyRank(from.GetMyRank());
            // myRankPercentile
            SetMyRankPercentile(from.GetMyRankPercentile());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // gpPoint
            if (Yippee.Net.Internal.Serialize(output, gpPoint_) == false)
            {
                return false;
            }
            // repeatCount
            if (Yippee.Net.Internal.Serialize(output, repeatCount_) == false)
            {
                return false;
            }
            // rewardDate
            if (Yippee.Net.Internal.Serialize(output, rewardDate_) == false)
            {
                return false;
            }
            // repeatReward
            if (repeatReward_.Serialize(stream) == false)
            {
                return false;
            }
            // league
            {
                int value = (int)league_;
                if (Yippee.Net.Internal.Serialize(output, value) == false)
                {
                    return false;
                }
            }
            // myRank
            if (Yippee.Net.Internal.Serialize(output, myRank_) == false)
            {
                return false;
            }
            // myRankPercentile
            if (Yippee.Net.Internal.Serialize(output, myRankPercentile_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // gpPoint
            if (Yippee.Net.Internal.Deserialize(input, out gpPoint_) == false)
            {
                return false;
            }
            // repeatCount
            if (Yippee.Net.Internal.Deserialize(input, out repeatCount_) == false)
            {
                return false;
            }
            // rewardDate
            if (Yippee.Net.Internal.Deserialize(input, out rewardDate_) == false)
            {
                return false;
            }
            // repeatReward
            if (repeatReward_.Deserialize(stream) == false)
            {
                return false;
            }
            // league
            {
                int value = 0;
                if (Yippee.Net.Internal.Deserialize(input, out value) == false)
                {
                    return false;
                }
                league_ = (grandprix_league)value;
            }
            // myRank
            if (Yippee.Net.Internal.Deserialize(input, out myRank_) == false)
            {
                return false;
            }
            // myRankPercentile
            if (Yippee.Net.Internal.Deserialize(input, out myRankPercentile_) == false)
            {
                return false;
            }

            return true;
        }
        public int GetGpPoint()
        {
            return gpPoint_;
        }
        public void SetGpPoint(int value)
        {
            gpPoint_ = value;
        }
        public short GetRepeatCount()
        {
            return repeatCount_;
        }
        public void SetRepeatCount(short value)
        {
            repeatCount_ = value;
        }
        public long GetRewardDate()
        {
            return rewardDate_;
        }
        public void SetRewardDate(long value)
        {
            rewardDate_ = value;
        }
        public reward_info GetRepeatReward()
        {
            return repeatReward_;
        }
        public void SetRepeatReward(reward_info value)
        {
            repeatReward_ = value;
        }
        public grandprix_league GetLeague()
        {
            return league_;
        }
        public void SetLeague(grandprix_league value)
        {
            league_ = value;
        }
        public ulong GetMyRank()
        {
            return myRank_;
        }
        public void SetMyRank(ulong value)
        {
            myRank_ = value;
        }
        public int GetMyRankPercentile()
        {
            return myRankPercentile_;
        }
        public void SetMyRankPercentile(int value)
        {
            myRankPercentile_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class grandprix_rank_unit : Yippee.Net.IObjectBase
    {
        private ulong playerNo_;
        private ulong rank_;
        private short nationCode_;
        private String nick_ = "";
        private short level_;
        private int gpPoint_;
        private static Yippee.Net.TypeInfo grandprix_rank_unitTypeInfo_ = new Yippee.Net.TypeInfo(0xBE3D034, "protocol.grandprix_rank_unit");

        public grandprix_rank_unit()
        {
        }
        public grandprix_rank_unit(grandprix_rank_unit from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_rank_unitTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_rank_unit();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_rank_unit(this);
        }
        public void Clear()
        {
            // playerNo
            playerNo_ = 0;
            // rank
            rank_ = 0;
            // nationCode
            nationCode_ = 0;
            // nick
            nick_ = "";
            // level
            level_ = 0;
            // gpPoint
            gpPoint_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // playerNo
            totalSize += Yippee.Net.Internal.Size(playerNo_);
            // rank
            totalSize += Yippee.Net.Internal.Size(rank_);
            // nationCode
            totalSize += Yippee.Net.Internal.Size(nationCode_);
            // nick
            totalSize += Yippee.Net.Internal.SizeUTF8String(nick_);
            // level
            totalSize += Yippee.Net.Internal.Size(level_);
            // gpPoint
            totalSize += Yippee.Net.Internal.Size(gpPoint_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_rank_unit)from);
        }
        public void CopyFrom(grandprix_rank_unit from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_rank_unit)from);
        }
        public void MergeFrom(grandprix_rank_unit from)
        {
            if (from == this)
            {
                return;
            }

            // playerNo
            SetPlayerNo(from.GetPlayerNo());
            // rank
            SetRank(from.GetRank());
            // nationCode
            SetNationCode(from.GetNationCode());
            // nick
            SetNick(from.GetNick());
            // level
            SetLevel(from.GetLevel());
            // gpPoint
            SetGpPoint(from.GetGpPoint());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // playerNo
            if (Yippee.Net.Internal.Serialize(output, playerNo_) == false)
            {
                return false;
            }
            // rank
            if (Yippee.Net.Internal.Serialize(output, rank_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Serialize(output, nationCode_) == false)
            {
                return false;
            }
            // nick
            if (Yippee.Net.Internal.SerializeUTF8String(output, nick_) == false)
            {
                return false;
            }
            // level
            if (Yippee.Net.Internal.Serialize(output, level_) == false)
            {
                return false;
            }
            // gpPoint
            if (Yippee.Net.Internal.Serialize(output, gpPoint_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // playerNo
            if (Yippee.Net.Internal.Deserialize(input, out playerNo_) == false)
            {
                return false;
            }
            // rank
            if (Yippee.Net.Internal.Deserialize(input, out rank_) == false)
            {
                return false;
            }
            // nationCode
            if (Yippee.Net.Internal.Deserialize(input, out nationCode_) == false)
            {
                return false;
            }
            // nick
            if (Yippee.Net.Internal.DeserializeUTF8String(input, out nick_) == false)
            {
                return false;
            }
            // level
            if (Yippee.Net.Internal.Deserialize(input, out level_) == false)
            {
                return false;
            }
            // gpPoint
            if (Yippee.Net.Internal.Deserialize(input, out gpPoint_) == false)
            {
                return false;
            }

            return true;
        }
        public ulong GetPlayerNo()
        {
            return playerNo_;
        }
        public void SetPlayerNo(ulong value)
        {
            playerNo_ = value;
        }
        public ulong GetRank()
        {
            return rank_;
        }
        public void SetRank(ulong value)
        {
            rank_ = value;
        }
        public short GetNationCode()
        {
            return nationCode_;
        }
        public void SetNationCode(short value)
        {
            nationCode_ = value;
        }
        public String GetNick()
        {
            return nick_;
        }
        public void SetNick(String value)
        {
            nick_ = value;
        }
        public short GetLevel()
        {
            return level_;
        }
        public void SetLevel(short value)
        {
            level_ = value;
        }
        public int GetGpPoint()
        {
            return gpPoint_;
        }
        public void SetGpPoint(int value)
        {
            gpPoint_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class grandprix_info_req : Yippee.Net.IObjectBase
    {
        private static Yippee.Net.TypeInfo grandprix_info_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x13A3B11, "protocol.grandprix_info_req");

        public grandprix_info_req()
        {
        }
        public grandprix_info_req(grandprix_info_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_info_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_info_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_info_req(this);
        }
        public void Clear()
        {
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_info_req)from);
        }
        public void CopyFrom(grandprix_info_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_info_req)from);
        }
        public void MergeFrom(grandprix_info_req from)
        {
            if (from == this)
            {
                return;
            }
        }
        public bool Serialize(Stream stream)
        {
            return true;
        }
        public bool Deserialize(Stream stream)
        {
            return true;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class grandprix_info_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private grandprix_info info_ = new grandprix_info();
        private static Yippee.Net.TypeInfo grandprix_info_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x13A0583, "protocol.grandprix_info_ans");

        public grandprix_info_ans()
        {
        }
        public grandprix_info_ans(grandprix_info_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_info_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_info_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_info_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // info
            info_.Clear();
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // info
            totalSize += Yippee.Net.Internal.Size(info_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_info_ans)from);
        }
        public void CopyFrom(grandprix_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_info_ans)from);
        }
        public void MergeFrom(grandprix_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // info
            SetInfo(from.GetInfo());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // info
            if (info_.Serialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // info
            if (info_.Deserialize(stream) == false)
            {
                return false;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public grandprix_info GetInfo()
        {
            return info_;
        }
        public void SetInfo(grandprix_info value)
        {
            info_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class grandprix_rank_info_req : Yippee.Net.IObjectBase
    {
        private grandprix_rank_type rankType_;
        private long beginRank_;
        private short reqCount_;
        private static Yippee.Net.TypeInfo grandprix_rank_info_reqTypeInfo_ = new Yippee.Net.TypeInfo(0x1089D1, "protocol.grandprix_rank_info_req");

        public grandprix_rank_info_req()
        {
        }
        public grandprix_rank_info_req(grandprix_rank_info_req from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_rank_info_reqTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_rank_info_req();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_rank_info_req(this);
        }
        public void Clear()
        {
            // rankType
            rankType_ = 0;
            // beginRank
            beginRank_ = 0;
            // reqCount
            reqCount_ = 0;
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // rankType
            totalSize += sizeof(int);
            // beginRank
            totalSize += Yippee.Net.Internal.Size(beginRank_);
            // reqCount
            totalSize += Yippee.Net.Internal.Size(reqCount_);

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_rank_info_req)from);
        }
        public void CopyFrom(grandprix_rank_info_req from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_rank_info_req)from);
        }
        public void MergeFrom(grandprix_rank_info_req from)
        {
            if (from == this)
            {
                return;
            }

            // rankType
            SetRankType(from.GetRankType());
            // beginRank
            SetBeginRank(from.GetBeginRank());
            // reqCount
            SetReqCount(from.GetReqCount());
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // rankType
            {
                int value = (int)rankType_;
                if (Yippee.Net.Internal.Serialize(output, value) == false)
                {
                    return false;
                }
            }
            // beginRank
            if (Yippee.Net.Internal.Serialize(output, beginRank_) == false)
            {
                return false;
            }
            // reqCount
            if (Yippee.Net.Internal.Serialize(output, reqCount_) == false)
            {
                return false;
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // rankType
            {
                int value = 0;
                if (Yippee.Net.Internal.Deserialize(input, out value) == false)
                {
                    return false;
                }
                rankType_ = (grandprix_rank_type)value;
            }
            // beginRank
            if (Yippee.Net.Internal.Deserialize(input, out beginRank_) == false)
            {
                return false;
            }
            // reqCount
            if (Yippee.Net.Internal.Deserialize(input, out reqCount_) == false)
            {
                return false;
            }

            return true;
        }
        public grandprix_rank_type GetRankType()
        {
            return rankType_;
        }
        public void SetRankType(grandprix_rank_type value)
        {
            rankType_ = value;
        }
        public long GetBeginRank()
        {
            return beginRank_;
        }
        public void SetBeginRank(long value)
        {
            beginRank_ = value;
        }
        public short GetReqCount()
        {
            return reqCount_;
        }
        public void SetReqCount(short value)
        {
            reqCount_ = value;
        }
    }
    // ------------------------------------------------------------------------------------------------

    public class grandprix_rank_info_ans : Yippee.Net.IObjectBase
    {
        private short result_;
        private grandprix_rank_type rankType_;
        private grandprix_rank_unit[] infos_ = new grandprix_rank_unit[0];
        private static Yippee.Net.TypeInfo grandprix_rank_info_ansTypeInfo_ = new Yippee.Net.TypeInfo(0x10B743, "protocol.grandprix_rank_info_ans");

        public grandprix_rank_info_ans()
        {
        }
        public grandprix_rank_info_ans(grandprix_rank_info_ans from)
        {
            MergeFrom(from);
        }
        public static Yippee.Net.TypeInfo StaticTypeInfo()
        {
            return grandprix_rank_info_ansTypeInfo_;
        }
        public Yippee.Net.TypeInfo RuntimeTypeInfo()
        {
            return StaticTypeInfo();
        }
        public Yippee.Net.IObjectBase NewInstance()
        {
            return new grandprix_rank_info_ans();
        }
        public Yippee.Net.IObjectBase Clone()
        {
            return new grandprix_rank_info_ans(this);
        }
        public void Clear()
        {
            // result
            result_ = 0;
            // rankType
            rankType_ = 0;
            // infos
            Array.Resize(ref infos_, 0);
        }
        public bool Initialized()
        {
            //this call is not implemented yet
            return true;
        }
        public int Size()
        {
            int totalSize = 0;

            // result
            totalSize += Yippee.Net.Internal.Size(result_);
            // rankType
            totalSize += sizeof(int);
            // infos
            totalSize += sizeof(uint);
            for (uint i = 0; i != infos_.Length; ++i)
            {
                totalSize += Yippee.Net.Internal.Size(infos_[i]);
            }

            return totalSize;
        }
        public void CopyFrom(Yippee.Net.IObjectBase from)
        {
            CopyFrom((grandprix_rank_info_ans)from);
        }
        public void CopyFrom(grandprix_rank_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            Clear();
            MergeFrom(from);
        }
        public void MergeFrom(Yippee.Net.IObjectBase from)
        {
            MergeFrom((grandprix_rank_info_ans)from);
        }
        public void MergeFrom(grandprix_rank_info_ans from)
        {
            if (from == this)
            {
                return;
            }

            // result
            SetResult(from.GetResult());
            // rankType
            SetRankType(from.GetRankType());
            // infos
            int infosLength = infos_.Length;
            Array.Resize(ref infos_, infosLength + from.infos_.Length);
            Array.Copy(from.infos_, 0, infos_, infosLength, from.infos_.Length);
        }
        public bool Serialize(Stream stream)
        {
            BinaryWriter output = new BinaryWriter(stream);
            // result
            if (Yippee.Net.Internal.Serialize(output, result_) == false)
            {
                return false;
            }
            // rankType
            {
                int value = (int)rankType_;
                if (Yippee.Net.Internal.Serialize(output, value) == false)
                {
                    return false;
                }
            }
            // infos
            uint infosLength = (uint)infos_.Length;
            if (Yippee.Net.Internal.Serialize(output, infosLength) == false)
            {
                return false;
            }
            for (uint i = 0; i < infosLength; ++i)
            {
                if (infos_[i].Serialize(stream) == false)
                {
                    return false;
                }
            }

            return true;
        }
        public bool Deserialize(Stream stream)
        {
            BinaryReader input = new BinaryReader(stream);
            // result
            if (Yippee.Net.Internal.Deserialize(input, out result_) == false)
            {
                return false;
            }
            // rankType
            {
                int value = 0;
                if (Yippee.Net.Internal.Deserialize(input, out value) == false)
                {
                    return false;
                }
                rankType_ = (grandprix_rank_type)value;
            }
            // infos
            uint infosLength = 0;
            if (Yippee.Net.Internal.Deserialize(input, out infosLength) == false)
            {
                return false;
            }
            Array.Resize(ref infos_, (int)infosLength);
            for (uint i = 0; i < infosLength; ++i)
            {
                grandprix_rank_unit newInfos = new grandprix_rank_unit();
                if (newInfos.Deserialize(stream) == false)
                {
                    return false;
                }
                infos_[i] = newInfos;
            }

            return true;
        }
        public short GetResult()
        {
            return result_;
        }
        public void SetResult(short value)
        {
            result_ = value;
        }
        public grandprix_rank_type GetRankType()
        {
            return rankType_;
        }
        public void SetRankType(grandprix_rank_type value)
        {
            rankType_ = value;
        }
        public grandprix_rank_unit[] GetInfos()
        {
            return infos_;
        }
        public grandprix_rank_unit GetInfos(int index)
        {
            return infos_[index];
        }
        public void SetInfos(grandprix_rank_unit[] infos)
        {
            infos_ = infos;
        }
        public void AddInfos(grandprix_rank_unit infos)
        {
            Array.Resize(ref infos_, infos_.Length + 1);
            infos_[infos_.Length - 1] = infos;
        }
        public void RemoveInfos(grandprix_rank_unit infos)
        {
            int i = 0;
            for (; i < infos_.Length; ++i)
            {
                if (infos_[i] == infos)
                {
                    break;
                }
            }
            if (i == infos_.Length)
            {
                return;
            }
            for (; i < infos_.Length - 1; ++i)
            {
                infos_[i] = infos_[i+1];
            }
            Array.Resize(ref infos_, infos_.Length - 1);
        }
    }
    // ------------------------------------------------------------------------------------------------


}	// namespace protocol